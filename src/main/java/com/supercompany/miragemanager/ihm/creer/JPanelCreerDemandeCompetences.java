/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.supercompany.miragemanager.ihm.creer;

import com.supercompany.miragemanager.ihm.popup.ConfirmationPopUp;
import com.supercompany.miragemanager.ihm.popup.ErrorPopUp;
import fr.jaschavolp.m1.jee.mirageshared.dmdcompetences.CreateDmdCompetencesVM;
import fr.jaschavolp.m1.jee.mirageshared.dmdcompetences.Exceptions.AucuneCompetenceException;
import fr.jaschavolp.m1.jee.mirageshared.shared.exceptions.IdentifiantInvalideException;
import fr.jaschavolp.m1.jee.mirageshared.shared.services.ServicesManagerRemote;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;

/**
 * Structure une JPanel Personnalisée pour la création d'une demande de compétences
 * @author FlorianDELSOL
 */
public class JPanelCreerDemandeCompetences extends javax.swing.JPanel {
    
    /**
     * Identifiant du Manager
     */
    private int identifiantManager;
    
    /**
     * Liste des compétences qui figureront sur la demande
     */
    private List<String> competences;
   
    /**
     * service permettant la communication avec le serveur
     */
    private ServicesManagerRemote service;

    /**
     * Créer une nouvelle instance
     * @param identifiantManager L'identifiant du Manager connecté
     * @param service Le service pour permettre la communication entre le client et le serveur
     */
    public JPanelCreerDemandeCompetences(int identifiantManager, ServicesManagerRemote service) {
        initComponents();
        this.identifiantManager = identifiantManager;
        this.service = service;
        competences = new ArrayList<>();
        actualize();
    }
    
    public void actualize(){
        String txt = "";
        for(int i = 0; i<competences.size(); i++){
            txt += competences.get(i) + (i<competences.size()-1 ? ", " : "");
        }
        jLabelListeCompetencesData.setText(txt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanelIdentifiant = new javax.swing.JPanel();
        jLabelCompetenceTitre = new javax.swing.JLabel();
        jButtonAjouterCompetence = new javax.swing.JButton();
        jTextFieldCompetence = new javax.swing.JTextField();
        jPanelListeComeptence = new javax.swing.JPanel();
        jLabelListeCompetencesTitre = new javax.swing.JLabel();
        jLabelListeCompetencesData = new javax.swing.JLabel();
        jPanelAction = new javax.swing.JPanel();
        jButtonEnvoyerDmd = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setBackground(new java.awt.Color(255, 255, 255));

        jPanelIdentifiant.setBackground(new java.awt.Color(250, 250, 255));

        jLabelCompetenceTitre.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelCompetenceTitre.setText("compétence :");

        jButtonAjouterCompetence.setText("Ajouter la compétence");
        jButtonAjouterCompetence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterCompetenceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelIdentifiantLayout = new javax.swing.GroupLayout(jPanelIdentifiant);
        jPanelIdentifiant.setLayout(jPanelIdentifiantLayout);
        jPanelIdentifiantLayout.setHorizontalGroup(
            jPanelIdentifiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIdentifiantLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCompetenceTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCompetence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAjouterCompetence, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelIdentifiantLayout.setVerticalGroup(
            jPanelIdentifiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIdentifiantLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelIdentifiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCompetenceTitre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAjouterCompetence)
                    .addComponent(jTextFieldCompetence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabelListeCompetencesTitre.setText("Liste des compétences entrées");

        jLabelListeCompetencesData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelListeCompetencesData.setText("Compétence 1, Compétence 2 etc");
        jLabelListeCompetencesData.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelListeCompetencesData.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanelListeComeptenceLayout = new javax.swing.GroupLayout(jPanelListeComeptence);
        jPanelListeComeptence.setLayout(jPanelListeComeptenceLayout);
        jPanelListeComeptenceLayout.setHorizontalGroup(
            jPanelListeComeptenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListeComeptenceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListeComeptenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelListeCompetencesData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelListeCompetencesTitre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelListeComeptenceLayout.setVerticalGroup(
            jPanelListeComeptenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListeComeptenceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelListeCompetencesTitre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelListeCompetencesData, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonEnvoyerDmd.setText("Envoyer");
        jButtonEnvoyerDmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnvoyerDmdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelActionLayout = new javax.swing.GroupLayout(jPanelAction);
        jPanelAction.setLayout(jPanelActionLayout);
        jPanelActionLayout.setHorizontalGroup(
            jPanelActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jButtonEnvoyerDmd, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );
        jPanelActionLayout.setVerticalGroup(
            jPanelActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonEnvoyerDmd, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelIdentifiant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelListeComeptence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelIdentifiant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelListeComeptence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Traitement executé lors du clic sur le bouton d'ajout d'une compétence :
     * Ajoute la compétence écrite (si elle n'est pas vide)
     * @param evt 
     */
    private void jButtonAjouterCompetenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterCompetenceActionPerformed
        if (jTextFieldCompetence.getText() != null && !jTextFieldCompetence.getText().isEmpty() && jTextFieldCompetence.getText().trim().length() > 0){
            competences.add(jTextFieldCompetence.getText());
            actualize();
        }else{
            ErrorPopUp popUp = new ErrorPopUp("Le champs est vide");
        }
    }//GEN-LAST:event_jButtonAjouterCompetenceActionPerformed

    /**
     * Traitement executé lors du clic sur le bouton d'envoie de la demande :
     * Envoie la demande de compétences si elle n'est pas vide
     * @param evt 
     */
    private void jButtonEnvoyerDmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnvoyerDmdActionPerformed
        if(!competences.isEmpty()){
            CreateDmdCompetencesVM viewModel = new CreateDmdCompetencesVM(identifiantManager, competences); // On structure la demande de compétence
            try {
                service.creerUneDemandeDeCompetences(viewModel); // On envoie au serveur la nouvelle demande
                ConfirmationPopUp confirmationPopUp = new ConfirmationPopUp("La demande à bien été envoyé.");
                confirmationPopUp.setVisible(true);
            } catch (AucuneCompetenceException | IdentifiantInvalideException ex) {
                ErrorPopUp errorPopUp = new ErrorPopUp(ex.getMessage());
                errorPopUp.setVisible(true);
                Logger.getLogger(JPanelCreerDemandeCompetences.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            ErrorPopUp popUp = new ErrorPopUp("La demande de compétences ne contient pas de compétences");
        }
    }//GEN-LAST:event_jButtonEnvoyerDmdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAjouterCompetence;
    private javax.swing.JButton jButtonEnvoyerDmd;
    private javax.swing.JLabel jLabelCompetenceTitre;
    private javax.swing.JLabel jLabelListeCompetencesData;
    private javax.swing.JLabel jLabelListeCompetencesTitre;
    private javax.swing.JPanel jPanelAction;
    private javax.swing.JPanel jPanelIdentifiant;
    private javax.swing.JPanel jPanelListeComeptence;
    private javax.swing.JTextField jTextFieldCompetence;
    // End of variables declaration//GEN-END:variables
}
